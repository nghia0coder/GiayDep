// <auto-generated />
using System;
using GiayDep.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GiayDep.Migrations
{
    [DbContext(typeof(GiaydepContext))]
    partial class GiaydepContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GiayDep.Models.AppUserModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("GiayDep.Models.CtHoaDon", b =>
                {
                    b.Property<int>("IdchitietDdh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDchitietDDH");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdchitietDdh"), 1L, 1);

                    b.Property<decimal?>("Dongia")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("Idhoadon")
                        .HasColumnType("int")
                        .HasColumnName("IDhoadon");

                    b.Property<int>("Idsp")
                        .HasColumnType("int")
                        .HasColumnName("IDsp");

                    b.Property<int?>("Soluong")
                        .HasColumnType("int");

                    b.Property<string>("Tensp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdchitietDdh")
                        .HasName("PK_CT_HOA_DON_1");

                    b.HasIndex("Idhoadon");

                    b.HasIndex("Idsp");

                    b.ToTable("CT_HOA_DON", (string)null);
                });

            modelBuilder.Entity("GiayDep.Models.CtPhieuNhap", b =>
                {
                    b.Property<int>("IdchitietPn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDChitietPN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdchitietPn"), 1L, 1);

                    b.Property<decimal?>("Gia")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("Idphieunhap")
                        .HasColumnType("int")
                        .HasColumnName("IDphieunhap");

                    b.Property<int>("Idsp")
                        .HasColumnType("int")
                        .HasColumnName("IDSP");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Soluong")
                        .HasColumnType("int");

                    b.HasKey("IdchitietPn")
                        .HasName("PK_CT_PHIEU_NHAP_1");

                    b.HasIndex("Idphieunhap");

                    b.HasIndex("Idsp");

                    b.ToTable("CT_PHIEU_NHAP", (string)null);
                });

            modelBuilder.Entity("GiayDep.Models.HoaDon", b =>
                {
                    b.Property<int>("Idhoadon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDhoadon");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idhoadon"), 1L, 1);

                    b.Property<bool?>("Dahuy")
                        .HasColumnType("bit");

                    b.Property<bool>("Dathanhtoan")
                        .HasColumnType("bit");

                    b.Property<bool?>("Daxoa")
                        .HasColumnType("bit");

                    b.Property<int?>("Khuyenmai")
                        .HasColumnType("int");

                    b.Property<int>("Makh")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Ngaygiao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Ngaythanhtoan")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Tinhtranggiaohang")
                        .HasColumnType("bit");

                    b.HasKey("Idhoadon");

                    b.HasIndex("Makh");

                    b.ToTable("HOA_DON", (string)null);
                });

            modelBuilder.Entity("GiayDep.Models.KhachHang", b =>
                {
                    b.Property<int>("Idkhachhang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDkhachhang");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idkhachhang"), 1L, 1);

                    b.Property<string>("Diachi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gioitinh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Idtv")
                        .HasColumnType("int")
                        .HasColumnName("IDTV");

                    b.Property<string>("Sđt")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Tenkh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idkhachhang");

                    b.HasIndex("Idtv");

                    b.ToTable("KHACH_HANG", (string)null);
                });

            modelBuilder.Entity("GiayDep.Models.LoaiSp", b =>
                {
                    b.Property<int>("Idloai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idloai"), 1L, 1);

                    b.Property<string>("Tenloai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idloai");

                    b.ToTable("LoaiSp", (string)null);
                });

            modelBuilder.Entity("GiayDep.Models.Membership", b =>
                {
                    b.Property<int>("Idtv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDTV");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idtv"), 1L, 1);

                    b.Property<string>("DiaChi")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gioitinh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HoTen")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MaLoaiTv")
                        .HasColumnType("int")
                        .HasColumnName("MaLoaiTV");

                    b.Property<string>("Mk")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sđt")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tk")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Idtv");

                    b.HasIndex("MaLoaiTv");

                    b.ToTable("Membership", (string)null);
                });

            modelBuilder.Entity("GiayDep.Models.MembershipRight", b =>
                {
                    b.Property<int>("MaLoaiTv")
                        .HasColumnType("int")
                        .HasColumnName("MaLoaiTV");

                    b.Property<string>("Idright")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IDright");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("MaLoaiTv", "Idright")
                        .HasName("PK_Membership_right_1");

                    b.HasIndex("Idright");

                    b.ToTable("Membership_right", (string)null);
                });

            modelBuilder.Entity("GiayDep.Models.MembershipType", b =>
                {
                    b.Property<int>("MaLoaiTv")
                        .HasColumnType("int")
                        .HasColumnName("MaLoaiTV");

                    b.Property<int?>("KhuyenMai")
                        .HasColumnType("int");

                    b.Property<string>("TenLoai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaLoaiTv");

                    b.ToTable("Membership_Type", (string)null);
                });

            modelBuilder.Entity("GiayDep.Models.NhaCungCap", b =>
                {
                    b.Property<int>("Idnhacc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDnhacc");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idnhacc"), 1L, 1);

                    b.Property<string>("Diachi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Idnhasx")
                        .HasColumnType("int")
                        .HasColumnName("IDnhasx");

                    b.Property<string>("Sdt")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Tennhacc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idnhacc");

                    b.HasIndex("Idnhasx");

                    b.ToTable("NHA_CUNG_CAP", (string)null);
                });

            modelBuilder.Entity("GiayDep.Models.NhanVien", b =>
                {
                    b.Property<string>("Idnhanvien")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IDnhanvien");

                    b.Property<string>("Diachi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gioitinh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Ngaysinh")
                        .HasColumnType("datetime");

                    b.Property<string>("Sdt")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Tennv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idnhanvien");

                    b.ToTable("NHAN_VIEN", (string)null);
                });

            modelBuilder.Entity("GiayDep.Models.NhaSanXuat", b =>
                {
                    b.Property<int>("Idnhasx")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDnhasx");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idnhasx"), 1L, 1);

                    b.Property<string>("Diachi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sđt")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Tennhasx")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idnhasx");

                    b.ToTable("NHA_SAN_XUAT", (string)null);
                });

            modelBuilder.Entity("GiayDep.Models.PhieuNhap", b =>
                {
                    b.Property<int>("Idphieunhap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDphieunhap");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idphieunhap"), 1L, 1);

                    b.Property<int>("Idnhacc")
                        .HasColumnType("int")
                        .HasColumnName("IDnhacc");

                    b.Property<DateTime>("Ngaynhap")
                        .HasColumnType("datetime2");

                    b.HasKey("Idphieunhap");

                    b.HasIndex("Idnhacc");

                    b.ToTable("PHIEU_NHAP", (string)null);
                });

            modelBuilder.Entity("GiayDep.Models.Right", b =>
                {
                    b.Property<string>("Idright")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IDright");

                    b.Property<string>("NameRight")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idright");

                    b.ToTable("Right", (string)null);
                });

            modelBuilder.Entity("GiayDep.Models.SanPham", b =>
                {
                    b.Property<int>("Idsp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDSP");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idsp"), 1L, 1);

                    b.Property<string>("Baohanh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Dongia")
                        .HasColumnType("int");

                    b.Property<string>("Hinhanh1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Khuyenmai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Maloaisp")
                        .HasColumnType("int");

                    b.Property<int?>("Manhacc")
                        .HasColumnType("int");

                    b.Property<int?>("Soluong")
                        .HasColumnType("int");

                    b.Property<string>("Tensp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idsp");

                    b.HasIndex("Maloaisp");

                    b.HasIndex("Manhacc");

                    b.ToTable("SAN_PHAM", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("GiayDep.Models.CtHoaDon", b =>
                {
                    b.HasOne("GiayDep.Models.HoaDon", "IdhoadonNavigation")
                        .WithMany("CtHoaDons")
                        .HasForeignKey("Idhoadon")
                        .IsRequired()
                        .HasConstraintName("FK_CT_HOA_DON_HOA_DON");

                    b.HasOne("GiayDep.Models.SanPham", "IdspNavigation")
                        .WithMany("CtHoaDons")
                        .HasForeignKey("Idsp")
                        .IsRequired()
                        .HasConstraintName("FK_CT_HOA_DON_SAN_PHAM");

                    b.Navigation("IdhoadonNavigation");

                    b.Navigation("IdspNavigation");
                });

            modelBuilder.Entity("GiayDep.Models.CtPhieuNhap", b =>
                {
                    b.HasOne("GiayDep.Models.PhieuNhap", "IdphieunhapNavigation")
                        .WithMany("CtPhieuNhaps")
                        .HasForeignKey("Idphieunhap")
                        .IsRequired()
                        .HasConstraintName("FK_CT_PHIEU_NHAP_PHIEU_NHAP");

                    b.HasOne("GiayDep.Models.SanPham", "IdspNavigation")
                        .WithMany("CtPhieuNhaps")
                        .HasForeignKey("Idsp")
                        .IsRequired()
                        .HasConstraintName("FK_CT_PHIEU_NHAP_SAN_PHAM1");

                    b.Navigation("IdphieunhapNavigation");

                    b.Navigation("IdspNavigation");
                });

            modelBuilder.Entity("GiayDep.Models.HoaDon", b =>
                {
                    b.HasOne("GiayDep.Models.KhachHang", "MakhNavigation")
                        .WithMany("HoaDons")
                        .HasForeignKey("Makh")
                        .IsRequired()
                        .HasConstraintName("FK_HOA_DON_KHACH_HANG");

                    b.Navigation("MakhNavigation");
                });

            modelBuilder.Entity("GiayDep.Models.KhachHang", b =>
                {
                    b.HasOne("GiayDep.Models.Membership", "IdtvNavigation")
                        .WithMany("KhachHangs")
                        .HasForeignKey("Idtv")
                        .HasConstraintName("FK_KHACH_HANG_Membership");

                    b.Navigation("IdtvNavigation");
                });

            modelBuilder.Entity("GiayDep.Models.Membership", b =>
                {
                    b.HasOne("GiayDep.Models.MembershipType", "MaLoaiTvNavigation")
                        .WithMany("Memberships")
                        .HasForeignKey("MaLoaiTv")
                        .HasConstraintName("FK_Membership_Membership_Type");

                    b.Navigation("MaLoaiTvNavigation");
                });

            modelBuilder.Entity("GiayDep.Models.MembershipRight", b =>
                {
                    b.HasOne("GiayDep.Models.Right", "IdrightNavigation")
                        .WithMany("MembershipRights")
                        .HasForeignKey("Idright")
                        .IsRequired()
                        .HasConstraintName("FK_Membership_right_Right");

                    b.HasOne("GiayDep.Models.MembershipType", "MaLoaiTvNavigation")
                        .WithMany("MembershipRights")
                        .HasForeignKey("MaLoaiTv")
                        .IsRequired()
                        .HasConstraintName("FK_Membership_right_Membership_Type");

                    b.Navigation("IdrightNavigation");

                    b.Navigation("MaLoaiTvNavigation");
                });

            modelBuilder.Entity("GiayDep.Models.NhaCungCap", b =>
                {
                    b.HasOne("GiayDep.Models.NhaSanXuat", "IdnhasxNavigation")
                        .WithMany("NhaCungCaps")
                        .HasForeignKey("Idnhasx")
                        .IsRequired()
                        .HasConstraintName("FK_NHA_CUNG_CAP_NHA_SAN_XUAT");

                    b.Navigation("IdnhasxNavigation");
                });

            modelBuilder.Entity("GiayDep.Models.PhieuNhap", b =>
                {
                    b.HasOne("GiayDep.Models.NhaCungCap", "IdnhaccNavigation")
                        .WithMany("PhieuNhaps")
                        .HasForeignKey("Idnhacc")
                        .IsRequired()
                        .HasConstraintName("FK_PHIEU_NHAP_NHA_CUNG_CAP");

                    b.Navigation("IdnhaccNavigation");
                });

            modelBuilder.Entity("GiayDep.Models.SanPham", b =>
                {
                    b.HasOne("GiayDep.Models.LoaiSp", "MaloaispNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("Maloaisp")
                        .IsRequired()
                        .HasConstraintName("FK_SAN_PHAM_LoaiSp");

                    b.HasOne("GiayDep.Models.NhaCungCap", "ManhaccNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("Manhacc")
                        .HasConstraintName("FK_SAN_PHAM_NHA_CUNG_CAP");

                    b.Navigation("MaloaispNavigation");

                    b.Navigation("ManhaccNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("GiayDep.Models.AppUserModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("GiayDep.Models.AppUserModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GiayDep.Models.AppUserModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("GiayDep.Models.AppUserModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GiayDep.Models.HoaDon", b =>
                {
                    b.Navigation("CtHoaDons");
                });

            modelBuilder.Entity("GiayDep.Models.KhachHang", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("GiayDep.Models.LoaiSp", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("GiayDep.Models.Membership", b =>
                {
                    b.Navigation("KhachHangs");
                });

            modelBuilder.Entity("GiayDep.Models.MembershipType", b =>
                {
                    b.Navigation("MembershipRights");

                    b.Navigation("Memberships");
                });

            modelBuilder.Entity("GiayDep.Models.NhaCungCap", b =>
                {
                    b.Navigation("PhieuNhaps");

                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("GiayDep.Models.NhaSanXuat", b =>
                {
                    b.Navigation("NhaCungCaps");
                });

            modelBuilder.Entity("GiayDep.Models.PhieuNhap", b =>
                {
                    b.Navigation("CtPhieuNhaps");
                });

            modelBuilder.Entity("GiayDep.Models.Right", b =>
                {
                    b.Navigation("MembershipRights");
                });

            modelBuilder.Entity("GiayDep.Models.SanPham", b =>
                {
                    b.Navigation("CtHoaDons");

                    b.Navigation("CtPhieuNhaps");
                });
#pragma warning restore 612, 618
        }
    }
}
